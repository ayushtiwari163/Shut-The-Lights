{"ast":null,"code":"import _classCallCheck from\"/home/kakashi/Desktop/Shut-The-Lights/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kakashi/Desktop/Shut-The-Lights/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/kakashi/Desktop/Shut-The-Lights/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/kakashi/Desktop/Shut-The-Lights/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/kakashi/Desktop/Shut-The-Lights/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import\"./Cell.css\";/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/import{jsx as _jsx}from\"react/jsx-runtime\";var Cell=/*#__PURE__*/function(_Component){_inherits(Cell,_Component);var _super=_createSuper(Cell);function Cell(props){var _this;_classCallCheck(this,Cell);_this=_super.call(this,props);_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Cell,[{key:\"handleClick\",value:function handleClick(evt){// call up to the board to flip cells around this cell\nthis.props.flipCellsAroundMe();}},{key:\"render\",value:function render(){var classes=\"Cell\"+(this.props.isLit?\" Cell-lit\":\"\");return/*#__PURE__*/_jsx(\"td\",{className:classes,onClick:this.handleClick});}}]);return Cell;}(Component);export default Cell;","map":{"version":3,"sources":["/home/kakashi/Desktop/Shut-The-Lights/src/Cell.js"],"names":["React","Component","Cell","props","handleClick","bind","evt","flipCellsAroundMe","classes","isLit"],"mappings":"4wBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAO,YAAP,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I,8CAEMC,CAAAA,I,4FACJ,cAAYC,KAAZ,CAAmB,sCACjB,uBAAMA,KAAN,EACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CAFiB,aAGlB,C,4CAED,qBAAYC,GAAZ,CAAiB,CACf;AACA,KAAKH,KAAL,CAAWI,iBAAX,GACD,C,sBAED,iBAAS,CACP,GAAIC,CAAAA,OAAO,CAAG,QAAU,KAAKL,KAAL,CAAWM,KAAX,CAAmB,WAAnB,CAAiC,EAA3C,CAAd,CAEA,mBACI,WAAI,SAAS,CAAED,OAAf,CAAwB,OAAO,CAAE,KAAKJ,WAAtC,EADJ,CAGD,C,kBAjBgBH,S,EAqBnB,cAAeC,CAAAA,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(evt) {\n    // call up to the board to flip cells around this cell\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\n\nexport default Cell"]},"metadata":{},"sourceType":"module"}